{"ast":null,"code":"var _jsxFileName = \"/Users/kaunahassan/e-commerce-app/uix-cloudinary-input/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\nimport React, { useLayoutEffect, useState, useEffect } from 'react';\nimport { Image, Video, Placeholder } from 'cloudinary-react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport { Wrapper as ExtensionWrapper, useUiExtensionDialog, useFieldExtension, FieldExtensionType, FieldExtensionFeature, ExtensionType, ConfigType } from '@graphcms/uix-react-sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction isMediaType(item) {\n  return Boolean(item) && 'public_id' in item && 'resource_type' in item;\n}\n\nfunction isMediaList(media) {\n  return Array.isArray(media) && media.length > 0 && media.every(item => isMediaType(item));\n} // useUiExtensionDialog hook accepts two type parameters:\n// 1. The return value type, will be null or undefined if nothing is returned; falls back to any\n\n\nconst declaration = {\n  extensionType: ExtensionType.field,\n  fieldType: FieldExtensionType.JSON,\n  name: 'Cloudinary asset',\n  description: 'Pick asset object in Cloudinary',\n  features: [// Enables rendering of a form field\n  FieldExtensionFeature.FieldRenderer, // Enables handling lists of values\n  // Don't forget to enable multiple values when creating a UI extension field in Hygraph!\n  FieldExtensionFeature.ListRenderer, // Enables rendering in content table view\n  FieldExtensionFeature.TableRenderer],\n  // Optional fields that will when adding or updating a UI extension in Hygraph\n  config: {\n    CLOUD_NAME: {\n      displayName: 'Cloudinary cloud name',\n      type: ConfigType.string,\n      required: true\n    },\n    API_KEY: {\n      displayName: 'Cloudinary public api key',\n      type: ConfigType.string,\n      required: true\n    }\n  }\n};\n\nfunction noop() {} // Treat the dialog as a separate extension and render it at a dedicated route\n// The dialog path you set here should later be passed as the first argument to the openDialog function\n\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ExtensionWrapper, {\n    declaration: declaration,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(Extension, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/cloudinary\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(CloudinaryDialog, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction Extension() {\n  _s();\n\n  const {\n    isTableCell\n  } = useFieldExtension(); // isTableCell can be used to detect whether the extension is currently rendered in content table\n\n  if (isTableCell) {\n    return /*#__PURE__*/_jsxDEV(TableCellRenderer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormFieldRenderer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Extension, \"jVlNUi3xJuEG1QyYSKCjOIdpK50=\", false, function () {\n  return [useFieldExtension];\n});\n\n_c2 = Extension;\n\nfunction FormFieldRenderer() {\n  _s2();\n\n  const {\n    value: media,\n    // field.isList reveals whether a field handles multiple values\n    field: {\n      isList\n    },\n    onChange,\n    onFocus,\n    onBlur,\n    // expand opens a full-screen view\n    expand,\n    isExpanded,\n    openDialog,\n    extension: {\n      config\n    }\n  } = useFieldExtension();\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  useEffect(() => {\n    setIsTransitioning(false);\n  }, [isExpanded]);\n  const [clickedMedia, setClickedMedia] = React.useState(); // Note that in a form, an empty field's initial value is an empty string\n\n  const showMedia = Array.isArray(media) ? media.length > 0 : Boolean(media);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      padding: '10px',\n      opacity: isTransitioning ? 0 : 1\n    },\n    children: [isExpanded ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        cursor: 'pointer',\n        marginBottom: '10px',\n        boxSizing: 'border-box',\n        userSelect: 'none',\n        color: '#6663FD',\n        backgroundColor: '#F2F1FF',\n        textAlign: 'center',\n        lineHeight: '16px',\n        display: 'inline-flex',\n        border: '0px',\n        borderRadius: '4px',\n        fontWeight: 600,\n        fontFamily: 'Inter, -apple-system, system-ui, \"Segoe UI\", Helvetica, Arial, sans-serif',\n        fontSize: '14px',\n        verticalAlign: 'middle',\n        padding: '8px'\n      },\n      onClick: () => {\n        onFocus(); // openDialog accepts a route path as the first argument and,\n        // optionally, an object with props that will be passed to the dialog.\n        // These props will be returned by the useUiExtensionDialog hook\n        //\n\n        openDialog('/cloudinary', {\n          // By default, native Hygraph dialogs have a maxWidth of 600px.\n          // You can overwrite it by passing a maxWidth prop\n          maxWidth: '90vw',\n          isList,\n          media // openDialog returns a Promise with the value that was passed to onCloseDialog\n\n        }).then(value => {\n          if (value) {\n            onChange(value);\n          }\n\n          onBlur();\n        });\n      },\n      children: \"Choose from Cloudinary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), showMedia && (isMediaList(media) ? media.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        opacity: isExpanded && item.public_id !== (clickedMedia === null || clickedMedia === void 0 ? void 0 : clickedMedia.public_id) ? 0 : 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormAsset, {\n        cloudName: String(config.CLOUD_NAME),\n        media: item,\n        isExpanded: item.public_id === (clickedMedia === null || clickedMedia === void 0 ? void 0 : clickedMedia.public_id) && isExpanded,\n        onOpen: () => {\n          // expand accepts a boolean that will be accessible as isExpanded\n          expand(true);\n          setIsTransitioning(true);\n          setClickedMedia(item);\n        },\n        onClose: () => {\n          expand(false);\n          setIsTransitioning(true);\n          setClickedMedia(undefined);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: '10px',\n          cursor: 'pointer',\n          boxSizing: 'border-box',\n          userSelect: 'none',\n          color: '#6663FD',\n          backgroundColor: 'transparent',\n          textAlign: 'center',\n          lineHeight: '14px',\n          display: 'inline-flex',\n          border: '0px',\n          fontWeight: 500,\n          fontFamily: 'sans-serif',\n          fontSize: '12px',\n          verticalAlign: 'middle',\n          padding: '4px'\n        },\n        onClick: () => {\n          const newValues = media.filter(value => value.public_id !== item.public_id);\n          onChange(newValues);\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }, this)]\n    }, item.public_id + index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)) : /*#__PURE__*/_jsxDEV(FormAsset, {\n      cloudName: String(config.CLOUD_NAME),\n      isExpanded: media.public_id === (clickedMedia === null || clickedMedia === void 0 ? void 0 : clickedMedia.public_id) && isExpanded,\n      onOpen: () => {\n        expand(true);\n        setIsTransitioning(true);\n        setClickedMedia(media);\n      },\n      onClose: () => {\n        expand(false);\n        setIsTransitioning(true);\n        setClickedMedia(undefined);\n      },\n      media: media\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(FormFieldRenderer, \"6yqEyAKf7tM0EcO6ETPo4T51syU=\", false, function () {\n  return [useFieldExtension];\n});\n\n_c3 = FormFieldRenderer;\n\nfunction TableCellRenderer() {\n  _s3();\n\n  const {\n    value: media,\n    isExpanded,\n    expand,\n    field: {\n      isList\n    },\n    extension: {\n      config\n    }\n  } = useFieldExtension();\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  useEffect(() => {\n    setIsTransitioning(false);\n  }, [isExpanded]);\n\n  if (Array.isArray(media) ? media.length === 0 : Boolean(media) === false) {\n    return null;\n  }\n\n  if (isExpanded && isList) {\n    return /*#__PURE__*/_jsxDEV(TableAssetsPreviewModal, {\n      cloudName: String(config.CLOUD_NAME),\n      media: media,\n      closeModal: () => {\n        expand(false);\n        setIsTransitioning(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      opacity: isTransitioning ? 0 : 1\n    },\n    children: isMediaList(media) ? media.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 59,\n        height: 59,\n        marginRight: index === media.length - 1 ? 0 : 10\n      },\n      children: /*#__PURE__*/_jsxDEV(TableAsset, {\n        cloudName: String(config.CLOUD_NAME),\n        media: item,\n        onOpen: () => {\n          expand(true);\n          setIsTransitioning(true);\n        },\n        isExpanded: false,\n        onClose: noop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }, this)\n    }, item.public_id + index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 59,\n        height: 59\n      },\n      children: /*#__PURE__*/_jsxDEV(TableAsset, {\n        cloudName: String(config.CLOUD_NAME),\n        isExpanded: isExpanded,\n        onClose: () => {\n          expand(false);\n          setIsTransitioning(true);\n        },\n        onOpen: () => {\n          expand(true);\n          setIsTransitioning(true);\n        },\n        media: media\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(TableCellRenderer, \"1o9fmMrOndprwBAWLi+nWMXz4II=\", false, function () {\n  return [useFieldExtension];\n});\n\n_c4 = TableCellRenderer;\n\nfunction FormAsset({\n  media,\n  onOpen,\n  onClose,\n  isExpanded,\n  cloudName\n}) {\n  if (isExpanded) {\n    return /*#__PURE__*/_jsxDEV(FullScreenPreview, {\n      cloudName: cloudName,\n      media: media,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (media.resource_type === 'image') return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onOpen,\n    style: {\n      border: 'none',\n      outline: 'none',\n      background: 'transparent',\n      cursor: 'pointer'\n    },\n    children: /*#__PURE__*/_jsxDEV(Image, {\n      cloudName: cloudName,\n      publicId: media.public_id,\n      width: \"400\",\n      crop: \"scale\",\n      children: /*#__PURE__*/_jsxDEV(Placeholder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 7\n  }, this);\n  if (media.resource_type === 'video') return /*#__PURE__*/_jsxDEV(Video, {\n    cloudName: cloudName,\n    publicId: media.public_id,\n    width: \"400\",\n    controls: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 390,\n    columnNumber: 7\n  }, this);\n  return null;\n}\n\n_c5 = FormAsset;\n\nfunction TableAsset({\n  isExpanded,\n  media,\n  onOpen,\n  onClose,\n  cloudName,\n  style\n}) {\n  if (isExpanded) {\n    return /*#__PURE__*/_jsxDEV(FullScreenPreview, {\n      media: media,\n      onClose: onClose,\n      cloudName: cloudName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    tabIndex: 0,\n    onClick: onOpen,\n    onKeyPress: e => {\n      if (e.key === 'Enter') {\n        onOpen();\n      }\n    },\n    style: {\n      width: 59,\n      height: 59,\n      flexShrink: 0,\n      ...style\n    },\n    children: media.resource_type === 'image' ? /*#__PURE__*/_jsxDEV(Image, {\n      publicId: media.public_id,\n      cloudName: cloudName,\n      width: \"auto\",\n      crop: \"scale\",\n      style: {\n        objectFit: 'cover',\n        width: '100%',\n        height: '100%',\n        cursor: 'pointer'\n      },\n      children: /*#__PURE__*/_jsxDEV(Placeholder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }, this) : media.resource_type === 'video' ? /*#__PURE__*/_jsxDEV(Video, {\n      cloudName: cloudName,\n      publicId: media.public_id,\n      width: \"auto\",\n      style: {\n        objectFit: 'cover',\n        width: '100%',\n        height: '100%',\n        cursor: 'pointer'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 427,\n    columnNumber: 5\n  }, this);\n}\n\n_c6 = TableAsset;\n\nfunction TableAssetsPreviewModal({\n  closeModal,\n  media,\n  cloudName\n}) {\n  _s4();\n\n  const [maximizedAsset, setMaximizedAsset] = useState(null);\n\n  if (maximizedAsset) {\n    return /*#__PURE__*/_jsxDEV(TableAsset, {\n      cloudName: cloudName,\n      media: maximizedAsset,\n      isExpanded: true,\n      onOpen: noop,\n      onClose: () => {\n        setMaximizedAsset(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"aria-modal\": \"true\",\n    role: \"dialog\",\n    style: {\n      position: 'fixed',\n      inset: 0,\n      display: 'flex'\n    },\n    onClick: closeModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 'auto'\n      },\n      onClick: e => {\n        e.stopPropagation();\n      },\n      children: [/*#__PURE__*/_jsxDEV(CloseModalButton, {\n        closeModal: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          borderRadius: '4px',\n          backgroundColor: 'white',\n          maxWidth: '800px',\n          maxHeight: '400px',\n          padding: '16px',\n          overflowY: 'auto'\n        },\n        children: media.map((item, index) => /*#__PURE__*/_jsxDEV(TableAsset, {\n          isExpanded: false,\n          cloudName: cloudName,\n          media: item,\n          onOpen: () => {\n            setMaximizedAsset(item);\n          },\n          onClose: () => {\n            setMaximizedAsset(null);\n          },\n          style: {\n            width: 250,\n            height: 200,\n            marginRight: index === media.length - 1 ? 0 : 16\n          }\n        }, item.public_id + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 500,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(TableAssetsPreviewModal, \"ZrIIrRHmKqmv5yOrJgmTUtOmNnY=\");\n\n_c7 = TableAssetsPreviewModal;\n\nfunction FullScreenPreview({\n  media,\n  cloudName,\n  onClose\n}) {\n  _s5();\n\n  useEffect(() => {\n    const handler = e => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keyup', handler);\n    return () => {\n      window.removeEventListener('keyup', handler);\n    };\n  }, [onClose]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"aria-modal\": \"true\",\n    role: \"dialog\",\n    style: {\n      position: 'fixed',\n      inset: 0,\n      display: 'flex',\n      alignItems: 'center',\n      overflow: 'auto'\n    },\n    onClick: e => {\n      e.stopPropagation();\n      onClose();\n    },\n    children: [/*#__PURE__*/_jsxDEV(CloseModalButton, {\n      closeModal: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 7\n    }, this), media.resource_type === 'image' ? /*#__PURE__*/_jsxDEV(Image, {\n      cloudName: cloudName,\n      publicId: media.public_id,\n      width: \"auto\",\n      style: {\n        maxWidth: '100%',\n        margin: 'auto',\n        maxHeight: '100%'\n      },\n      crop: \"scale\",\n      children: /*#__PURE__*/_jsxDEV(Placeholder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 9\n    }, this) : media.resource_type === 'video' ? /*#__PURE__*/_jsxDEV(Video, {\n      cloudName: cloudName,\n      publicId: media.public_id,\n      controls: true,\n      style: {\n        maxWidth: '70vw',\n        margin: 'auto',\n        maxHeight: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 575,\n    columnNumber: 5\n  }, this);\n}\n\n_s5(FullScreenPreview, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c8 = FullScreenPreview;\n\nfunction CloudinaryDialog() {\n  _s6();\n\n  const {\n    extension: {\n      config\n    }\n  } = useFieldExtension(); // You can pass type parameters to useUiExtensionDialog\n  // onCloseDialog function is always returned from the hook\n\n  const {\n    onCloseDialog,\n    isList,\n    media\n  } = useUiExtensionDialog();\n  useLayoutEffect(() => {\n    // @ts-expect-error\n    const mediaLibrary = window.cloudinary.createMediaLibrary({\n      cloud_name: config.CLOUD_NAME,\n      api_key: config.API_KEY,\n      remove_header: false,\n      max_files: '10',\n      multiple: isList,\n      insert_caption: 'Add & close',\n      inline_container: '#cloudinary_dialog',\n      default_transformations: [[{\n        quality: 'auto'\n      }, {\n        fetch_format: 'auto'\n      }], [{\n        width: 80,\n        height: 80,\n        crop: 'fill',\n        gravity: 'auto',\n        radius: 'max'\n      }, {\n        fetch_format: 'auto',\n        quality: 'auto'\n      }]],\n      integration: {\n        type: 'hygraph_cloudinary_extension',\n        platform: 'hygraph',\n        version: 1.0,\n        environment: 'prod'\n      }\n    }, {\n      hideHandler: function () {\n        // To close the dialog without returning a value to the fields,\n        // call onCloseDialog with null or without an argument\n        onCloseDialog();\n      },\n      insertHandler: function (data) {\n        // Pass a single value to onCloseDialog to set it as the field value\n        // or an array, if the field handles multiple values\n        if (isList) {\n          if (isMediaList(media)) {\n            onCloseDialog([...media, ...data.assets]);\n          } else {\n            // initial field value is an empty string\n            const newArray = isMediaType(media) ? [media, ...data.assets] : data.assets;\n            onCloseDialog(newArray);\n          }\n        } else {\n          onCloseDialog(data.assets[0]);\n        }\n      }\n    });\n    mediaLibrary.show();\n  }, [config.API_KEY, config.CLOUD_NAME, isList, media, onCloseDialog]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"cloudinary_dialog\",\n    style: {\n      height: '800px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 683,\n    columnNumber: 5\n  }, this);\n}\n\n_s6(CloudinaryDialog, \"c4gUiO1iqTtFKbaAhNJ6ta8HU88=\", false, function () {\n  return [useFieldExtension, useUiExtensionDialog];\n});\n\n_c9 = CloudinaryDialog;\n\nfunction CloseModalButton({\n  closeModal\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    style: {\n      cursor: 'pointer',\n      userSelect: 'none',\n      backgroundColor: 'transparent',\n      textAlign: 'center',\n      lineHeight: '16px',\n      display: 'inline-flex',\n      border: '0px',\n      position: 'absolute',\n      right: '10px',\n      top: '10px',\n      fontWeight: 500,\n      background: 'white',\n      color: 'black',\n      fontSize: '16px',\n      borderRadius: '4px',\n      padding: '4px 8px',\n      verticalAlign: 'middle',\n      margin: 0\n    },\n    onClick: event => {\n      event.preventDefault();\n      event.stopPropagation();\n      closeModal();\n    },\n    onKeyPress: event => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (event.key === 'Enter') {\n        closeModal();\n      }\n    },\n    children: \"Close\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 694,\n    columnNumber: 5\n  }, this);\n}\n\n_c10 = CloseModalButton;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Extension\");\n$RefreshReg$(_c3, \"FormFieldRenderer\");\n$RefreshReg$(_c4, \"TableCellRenderer\");\n$RefreshReg$(_c5, \"FormAsset\");\n$RefreshReg$(_c6, \"TableAsset\");\n$RefreshReg$(_c7, \"TableAssetsPreviewModal\");\n$RefreshReg$(_c8, \"FullScreenPreview\");\n$RefreshReg$(_c9, \"CloudinaryDialog\");\n$RefreshReg$(_c10, \"CloseModalButton\");","map":{"version":3,"sources":["/Users/kaunahassan/e-commerce-app/uix-cloudinary-input/src/App.tsx"],"names":["React","useLayoutEffect","useState","useEffect","Image","Video","Placeholder","Route","Switch","BrowserRouter","Wrapper","ExtensionWrapper","useUiExtensionDialog","useFieldExtension","FieldExtensionType","FieldExtensionFeature","ExtensionType","ConfigType","isMediaType","item","Boolean","isMediaList","media","Array","isArray","length","every","declaration","extensionType","field","fieldType","JSON","name","description","features","FieldRenderer","ListRenderer","TableRenderer","config","CLOUD_NAME","displayName","type","string","required","API_KEY","noop","App","Extension","isTableCell","FormFieldRenderer","value","isList","onChange","onFocus","onBlur","expand","isExpanded","openDialog","extension","isTransitioning","setIsTransitioning","clickedMedia","setClickedMedia","showMedia","display","flexDirection","alignItems","padding","opacity","cursor","marginBottom","boxSizing","userSelect","color","backgroundColor","textAlign","lineHeight","border","borderRadius","fontWeight","fontFamily","fontSize","verticalAlign","maxWidth","then","map","index","public_id","String","undefined","marginLeft","newValues","filter","TableCellRenderer","width","height","marginRight","FormAsset","onOpen","onClose","cloudName","resource_type","outline","background","TableAsset","style","e","key","flexShrink","objectFit","TableAssetsPreviewModal","closeModal","maximizedAsset","setMaximizedAsset","position","inset","margin","stopPropagation","maxHeight","overflowY","FullScreenPreview","handler","window","addEventListener","removeEventListener","overflow","CloudinaryDialog","onCloseDialog","mediaLibrary","cloudinary","createMediaLibrary","cloud_name","api_key","remove_header","max_files","multiple","insert_caption","inline_container","default_transformations","quality","fetch_format","crop","gravity","radius","integration","platform","version","environment","hideHandler","insertHandler","data","assets","newArray","show","CloseModalButton","right","top","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useState, useEffect } from 'react';\nimport { Image, Video, Placeholder } from 'cloudinary-react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport {\n  Wrapper as ExtensionWrapper,\n  useUiExtensionDialog,\n  useFieldExtension,\n  FieldExtensionType,\n  FieldExtensionFeature,\n  FieldExtensionDeclaration,\n  ExtensionType,\n  ConfigType,\n} from '@graphcms/uix-react-sdk';\n\ntype Media = {\n  public_id: string;\n  resource_type: string;\n};\n\nfunction isMediaType(item: any): item is Media {\n  return Boolean(item) && 'public_id' in item && 'resource_type' in item;\n}\nfunction isMediaList(media: Media | Media[] | string): media is Media[] {\n  return (\n    Array.isArray(media) &&\n    media.length > 0 &&\n    media.every((item) => isMediaType(item))\n  );\n}\n// useUiExtensionDialog hook accepts two type parameters:\n// 1. The return value type, will be null or undefined if nothing is returned; falls back to any\ntype DialogReturn = Media | Media[] | null;\n// 2. Optional props you'd like to access in the dialog\ntype DialogProps = { isList: boolean; media: Media | Media[] | '' };\n\nconst declaration: FieldExtensionDeclaration = {\n  extensionType: ExtensionType.field,\n  fieldType: FieldExtensionType.JSON,\n  name: 'Cloudinary asset',\n  description: 'Pick asset object in Cloudinary',\n  features: [\n    // Enables rendering of a form field\n    FieldExtensionFeature.FieldRenderer,\n    // Enables handling lists of values\n    // Don't forget to enable multiple values when creating a UI extension field in Hygraph!\n    FieldExtensionFeature.ListRenderer,\n    // Enables rendering in content table view\n    FieldExtensionFeature.TableRenderer,\n  ],\n  // Optional fields that will when adding or updating a UI extension in Hygraph\n  config: {\n    CLOUD_NAME: {\n      displayName: 'Cloudinary cloud name',\n      type: ConfigType.string,\n      required: true,\n    },\n    API_KEY: {\n      displayName: 'Cloudinary public api key',\n      type: ConfigType.string,\n      required: true,\n    },\n  },\n};\n\nfunction noop() {}\n\n// Treat the dialog as a separate extension and render it at a dedicated route\n// The dialog path you set here should later be passed as the first argument to the openDialog function\nfunction App() {\n  return (\n    <ExtensionWrapper declaration={declaration}>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Extension />\n          </Route>\n          <Route path=\"/cloudinary\" exact>\n            <CloudinaryDialog />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </ExtensionWrapper>\n  );\n}\n\nfunction Extension() {\n  const { isTableCell } = useFieldExtension();\n  // isTableCell can be used to detect whether the extension is currently rendered in content table\n  if (isTableCell) {\n    return <TableCellRenderer />;\n  }\n\n  return <FormFieldRenderer />;\n}\n\nfunction FormFieldRenderer() {\n  const {\n    value: media,\n    // field.isList reveals whether a field handles multiple values\n    field: { isList },\n    onChange,\n    onFocus,\n    onBlur,\n    // expand opens a full-screen view\n    expand,\n    isExpanded,\n    openDialog,\n    extension: { config },\n  } = useFieldExtension();\n\n  const [isTransitioning, setIsTransitioning] = useState(false);\n\n  useEffect(() => {\n    setIsTransitioning(false);\n  }, [isExpanded]);\n\n  const [clickedMedia, setClickedMedia] = React.useState<Media>();\n  // Note that in a form, an empty field's initial value is an empty string\n  const showMedia = Array.isArray(media) ? media.length > 0 : Boolean(media);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        padding: '10px',\n        opacity: isTransitioning ? 0 : 1,\n      }}\n    >\n      {isExpanded ? null : (\n        <button\n          style={{\n            cursor: 'pointer',\n            marginBottom: '10px',\n            boxSizing: 'border-box',\n            userSelect: 'none',\n            color: '#6663FD',\n            backgroundColor: '#F2F1FF',\n            textAlign: 'center',\n            lineHeight: '16px',\n            display: 'inline-flex',\n            border: '0px',\n            borderRadius: '4px',\n            fontWeight: 600,\n            fontFamily:\n              'Inter, -apple-system, system-ui, \"Segoe UI\", Helvetica, Arial, sans-serif',\n            fontSize: '14px',\n            verticalAlign: 'middle',\n            padding: '8px',\n          }}\n          onClick={() => {\n            onFocus();\n            // openDialog accepts a route path as the first argument and,\n            // optionally, an object with props that will be passed to the dialog.\n            // These props will be returned by the useUiExtensionDialog hook\n            //\n            openDialog<DialogReturn, DialogProps>('/cloudinary', {\n              // By default, native Hygraph dialogs have a maxWidth of 600px.\n              // You can overwrite it by passing a maxWidth prop\n              maxWidth: '90vw',\n              isList,\n              media,\n              // openDialog returns a Promise with the value that was passed to onCloseDialog\n            }).then((value) => {\n              if (value) {\n                onChange(value);\n              }\n              onBlur();\n            });\n          }}\n        >\n          Choose from Cloudinary\n        </button>\n      )}\n      {showMedia &&\n        (isMediaList(media) ? (\n          media.map((item, index) => (\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                opacity:\n                  isExpanded && item.public_id !== clickedMedia?.public_id\n                    ? 0\n                    : 1,\n              }}\n              key={item.public_id + index}\n            >\n              <FormAsset\n                cloudName={String(config.CLOUD_NAME)}\n                media={item}\n                isExpanded={\n                  item.public_id === clickedMedia?.public_id && isExpanded\n                }\n                onOpen={() => {\n                  // expand accepts a boolean that will be accessible as isExpanded\n                  expand(true);\n                  setIsTransitioning(true);\n                  setClickedMedia(item);\n                }}\n                onClose={() => {\n                  expand(false);\n                  setIsTransitioning(true);\n                  setClickedMedia(undefined);\n                }}\n              />\n              <button\n                style={{\n                  marginLeft: '10px',\n                  cursor: 'pointer',\n                  boxSizing: 'border-box',\n                  userSelect: 'none',\n                  color: '#6663FD',\n                  backgroundColor: 'transparent',\n                  textAlign: 'center',\n                  lineHeight: '14px',\n                  display: 'inline-flex',\n                  border: '0px',\n                  fontWeight: 500,\n                  fontFamily: 'sans-serif',\n                  fontSize: '12px',\n                  verticalAlign: 'middle',\n                  padding: '4px',\n                }}\n                onClick={() => {\n                  const newValues = media.filter(\n                    (value) => value.public_id !== item.public_id\n                  );\n                  onChange(newValues);\n                }}\n              >\n                X\n              </button>\n            </div>\n          ))\n        ) : (\n          <FormAsset\n            cloudName={String(config.CLOUD_NAME)}\n            isExpanded={\n              media.public_id === clickedMedia?.public_id && isExpanded\n            }\n            onOpen={() => {\n              expand(true);\n              setIsTransitioning(true);\n              setClickedMedia(media);\n            }}\n            onClose={() => {\n              expand(false);\n              setIsTransitioning(true);\n              setClickedMedia(undefined);\n            }}\n            media={media}\n          />\n        ))}\n    </div>\n  );\n}\n\nfunction TableCellRenderer() {\n  const {\n    value: media,\n    isExpanded,\n    expand,\n    field: { isList },\n    extension: { config },\n  } = useFieldExtension();\n\n  const [isTransitioning, setIsTransitioning] = useState(false);\n\n  useEffect(() => {\n    setIsTransitioning(false);\n  }, [isExpanded]);\n\n  if (Array.isArray(media) ? media.length === 0 : Boolean(media) === false) {\n    return null;\n  }\n\n  if (isExpanded && isList) {\n    return (\n      <TableAssetsPreviewModal\n        cloudName={String(config.CLOUD_NAME)}\n        media={media}\n        closeModal={() => {\n          expand(false);\n          setIsTransitioning(true);\n        }}\n      />\n    );\n  }\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        opacity: isTransitioning ? 0 : 1,\n      }}\n    >\n      {isMediaList(media) ? (\n        media.map((item: Media, index: number) => (\n          <div\n            key={item.public_id + index}\n            style={{\n              width: 59,\n              height: 59,\n              marginRight: index === media.length - 1 ? 0 : 10,\n            }}\n          >\n            <TableAsset\n              cloudName={String(config.CLOUD_NAME)}\n              media={item}\n              onOpen={() => {\n                expand(true);\n                setIsTransitioning(true);\n              }}\n              isExpanded={false}\n              onClose={noop}\n            />\n          </div>\n        ))\n      ) : (\n        <div style={{ width: 59, height: 59 }}>\n          <TableAsset\n            cloudName={String(config.CLOUD_NAME)}\n            isExpanded={isExpanded}\n            onClose={() => {\n              expand(false);\n              setIsTransitioning(true);\n            }}\n            onOpen={() => {\n              expand(true);\n              setIsTransitioning(true);\n            }}\n            media={media}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction FormAsset({\n  media,\n  onOpen,\n  onClose,\n  isExpanded,\n  cloudName,\n}: {\n  style?: React.CSSProperties;\n  isExpanded: boolean;\n  media: Media;\n  onOpen: () => void;\n  onClose: () => void;\n  cloudName: string;\n}) {\n  if (isExpanded) {\n    return (\n      <FullScreenPreview\n        cloudName={cloudName}\n        media={media}\n        onClose={onClose}\n      />\n    );\n  }\n\n  if (media.resource_type === 'image')\n    return (\n      <button\n        onClick={onOpen}\n        style={{\n          border: 'none',\n          outline: 'none',\n          background: 'transparent',\n          cursor: 'pointer',\n        }}\n      >\n        <Image\n          cloudName={cloudName}\n          publicId={media.public_id}\n          width=\"400\"\n          crop=\"scale\"\n        >\n          <Placeholder />\n        </Image>\n      </button>\n    );\n\n  if (media.resource_type === 'video')\n    return (\n      <Video\n        cloudName={cloudName}\n        publicId={media.public_id}\n        width=\"400\"\n        controls\n      />\n    );\n\n  return null;\n}\n\nfunction TableAsset({\n  isExpanded,\n  media,\n  onOpen,\n  onClose,\n  cloudName,\n  style,\n}: {\n  style?: React.CSSProperties;\n  isExpanded: boolean;\n  media: Media;\n  onOpen: () => void;\n  onClose: () => void;\n  cloudName: string;\n}) {\n  if (isExpanded) {\n    return (\n      <FullScreenPreview\n        media={media}\n        onClose={onClose}\n        cloudName={cloudName}\n      />\n    );\n  }\n\n  return (\n    <div\n      tabIndex={0}\n      onClick={onOpen}\n      onKeyPress={(e) => {\n        if (e.key === 'Enter') {\n          onOpen();\n        }\n      }}\n      style={{\n        width: 59,\n        height: 59,\n        flexShrink: 0,\n        ...style,\n      }}\n    >\n      {media.resource_type === 'image' ? (\n        <Image\n          publicId={media.public_id}\n          cloudName={cloudName}\n          width=\"auto\"\n          crop=\"scale\"\n          style={{\n            objectFit: 'cover',\n            width: '100%',\n            height: '100%',\n            cursor: 'pointer',\n          }}\n        >\n          <Placeholder />\n        </Image>\n      ) : media.resource_type === 'video' ? (\n        <Video\n          cloudName={cloudName}\n          publicId={media.public_id}\n          width=\"auto\"\n          style={{\n            objectFit: 'cover',\n            width: '100%',\n            height: '100%',\n            cursor: 'pointer',\n          }}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nfunction TableAssetsPreviewModal({\n  closeModal,\n  media,\n  cloudName,\n}: {\n  media: Media[];\n  closeModal: () => void;\n  cloudName: string;\n}) {\n  const [maximizedAsset, setMaximizedAsset] = useState<Media | null>(null);\n\n  if (maximizedAsset) {\n    return (\n      <TableAsset\n        cloudName={cloudName}\n        media={maximizedAsset}\n        isExpanded\n        onOpen={noop}\n        onClose={() => {\n          setMaximizedAsset(null);\n        }}\n      />\n    );\n  }\n\n  return (\n    <div\n      aria-modal=\"true\"\n      role=\"dialog\"\n      style={{\n        position: 'fixed',\n        inset: 0,\n        display: 'flex',\n      }}\n      onClick={closeModal}\n    >\n      <div\n        style={{ margin: 'auto' }}\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n      >\n        <CloseModalButton closeModal={closeModal} />\n        <div\n          style={{\n            display: 'flex',\n            borderRadius: '4px',\n            backgroundColor: 'white',\n            maxWidth: '800px',\n            maxHeight: '400px',\n            padding: '16px',\n            overflowY: 'auto',\n          }}\n        >\n          {media.map((item, index) => (\n            <TableAsset\n              isExpanded={false}\n              cloudName={cloudName}\n              media={item}\n              key={item.public_id + index}\n              onOpen={() => {\n                setMaximizedAsset(item);\n              }}\n              onClose={() => {\n                setMaximizedAsset(null);\n              }}\n              style={{\n                width: 250,\n                height: 200,\n                marginRight: index === media.length - 1 ? 0 : 16,\n              }}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction FullScreenPreview({\n  media,\n  cloudName,\n  onClose,\n}: {\n  media: Media;\n  onClose: () => void;\n  cloudName: string;\n}) {\n  useEffect(() => {\n    const handler = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keyup', handler);\n    return () => {\n      window.removeEventListener('keyup', handler);\n    };\n  }, [onClose]);\n\n  return (\n    <div\n      aria-modal=\"true\"\n      role=\"dialog\"\n      style={{\n        position: 'fixed',\n        inset: 0,\n        display: 'flex',\n        alignItems: 'center',\n        overflow: 'auto',\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        onClose();\n      }}\n    >\n      <CloseModalButton closeModal={onClose} />\n      {media.resource_type === 'image' ? (\n        <Image\n          cloudName={cloudName}\n          publicId={media.public_id}\n          width=\"auto\"\n          style={{ maxWidth: '100%', margin: 'auto', maxHeight: '100%' }}\n          crop=\"scale\"\n        >\n          <Placeholder />\n        </Image>\n      ) : media.resource_type === 'video' ? (\n        <Video\n          cloudName={cloudName}\n          publicId={media.public_id}\n          controls\n          style={{ maxWidth: '70vw', margin: 'auto', maxHeight: '100%' }}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nfunction CloudinaryDialog() {\n  const {\n    extension: { config },\n  } = useFieldExtension();\n  // You can pass type parameters to useUiExtensionDialog\n  // onCloseDialog function is always returned from the hook\n  const { onCloseDialog, isList, media } = useUiExtensionDialog<\n    DialogReturn,\n    DialogProps\n  >();\n  useLayoutEffect(() => {\n    // @ts-expect-error\n    const mediaLibrary = window.cloudinary.createMediaLibrary(\n      {\n        cloud_name: config.CLOUD_NAME,\n        api_key: config.API_KEY,\n        remove_header: false,\n        max_files: '10',\n        multiple: isList,\n        insert_caption: 'Add & close',\n        inline_container: '#cloudinary_dialog',\n        default_transformations: [\n          [{ quality: 'auto' }, { fetch_format: 'auto' }],\n          [\n            {\n              width: 80,\n              height: 80,\n              crop: 'fill',\n              gravity: 'auto',\n              radius: 'max',\n            },\n            { fetch_format: 'auto', quality: 'auto' },\n          ],\n        ],\n        integration: {\n          type: 'hygraph_cloudinary_extension',\n          platform: 'hygraph',\n          version: 1.0,\n          environment: 'prod',\n        },\n      },\n      {\n        hideHandler: function () {\n          // To close the dialog without returning a value to the fields,\n          // call onCloseDialog with null or without an argument\n          onCloseDialog();\n        },\n        insertHandler: function (data: { assets: Media[] }) {\n          // Pass a single value to onCloseDialog to set it as the field value\n          // or an array, if the field handles multiple values\n          if (isList) {\n            if (isMediaList(media)) {\n              onCloseDialog([...media, ...data.assets]);\n            } else {\n              // initial field value is an empty string\n              const newArray = isMediaType(media)\n                ? [media, ...data.assets]\n                : data.assets;\n              onCloseDialog(newArray);\n            }\n          } else {\n            onCloseDialog(data.assets[0]);\n          }\n        },\n      }\n    );\n    mediaLibrary.show();\n  }, [config.API_KEY, config.CLOUD_NAME, isList, media, onCloseDialog]);\n\n  return (\n    <div\n      id=\"cloudinary_dialog\"\n      style={{\n        height: '800px',\n      }}\n    />\n  );\n}\n\nfunction CloseModalButton({ closeModal }: { closeModal: () => void }) {\n  return (\n    <button\n      type=\"button\"\n      style={{\n        cursor: 'pointer',\n        userSelect: 'none',\n        backgroundColor: 'transparent',\n        textAlign: 'center',\n        lineHeight: '16px',\n        display: 'inline-flex',\n        border: '0px',\n        position: 'absolute',\n        right: '10px',\n        top: '10px',\n        fontWeight: 500,\n        background: 'white',\n        color: 'black',\n        fontSize: '16px',\n        borderRadius: '4px',\n        padding: '4px 8px',\n        verticalAlign: 'middle',\n        margin: 0,\n      }}\n      onClick={(event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        closeModal();\n      }}\n      onKeyPress={(event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        if (event.key === 'Enter') {\n          closeModal();\n        }\n      }}\n    >\n      Close\n    </button>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}