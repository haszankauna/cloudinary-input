{"ast":null,"code":"!function (e, o) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? o(exports, require(\"@graphcms/zoid/lib/zoid.js\")) : \"function\" == typeof define && define.amd ? define([\"exports\", \"@graphcms/zoid/lib/zoid.js\"], o) : o((e = e || self).GCUIX = {}, e.zoid);\n}(this, function (e, o) {\n  \"use strict\";\n\n  function n(e, o) {\n    if (null == e) return {};\n    var n,\n        i,\n        r = {},\n        t = Object.keys(e);\n\n    for (i = 0; i < t.length; i++) o.indexOf(n = t[i]) >= 0 || (r[n] = e[n]);\n\n    return r;\n  }\n\n  o = o && Object.prototype.hasOwnProperty.call(o, \"default\") ? o.default : o;\n  var i = [\"timeout\", \"window\", \"close\", \"focus\", \"resize\", \"uid\", \"cspNonce\", \"getParent\", \"getParentDomain\", \"hide\", \"show\", \"export\", \"onDisplay\", \"onRendered\", \"onRender\", \"onClose\", \"onDestroy\", \"onResize\", \"onFocus\", \"onError\", \"onProps\"],\n      r = [\"onProps\", \"onConnected\", \"resize\"],\n      t = [\"onProps\", \"onConnected\"];\n\n  function s(e) {\n    var o = {};\n    return Object.keys(e).forEach(function (n) {\n      i.includes(n) || (n.startsWith(\"_\") && i.includes(n.replace(/^_/g, \"\")) ? o[n.replace(/^_/g, \"\")] = e[n] : o[n] = e[n]);\n    }), o;\n  }\n\n  function a(e) {\n    var i = e.debug,\n        a = e.declaration,\n        d = e.onProps,\n        p = void 0 === d ? function () {} : d,\n        l = e.uid;\n    return new Promise(function (e, d) {\n      if (\"undefined\" == typeof window || void 0 === window.postMessage) return d({\n        error: \"unsupported_env\",\n        message: \"Unsupported environment: Not in a browser supporting PostMessage\"\n      });\n      var u = l || \"undefined\" != typeof URLSearchParams && new URLSearchParams(window.location.search).get(\"extensionUid\");\n      if (!u) return i && console.error(\"[UIX] no uid found in init params or extension URL\"), d({\n        error: \"missing_uid\",\n        message: \"Missing UID: no UID found in init params or extension URL\"\n      });\n\n      if (i && console.info(\"[UIX:\" + u + \"] initializing with uid \" + u), o.create({\n        tag: u,\n        url: window.location.href.toString(),\n        autoResize: {\n          width: !1,\n          height: !0,\n          element: \"html\"\n        },\n        props: {\n          onConnected: {\n            type: \"function\"\n          }\n        }\n      }), void 0 !== window.xprops) {\n        var c = window.xprops.onConnected;\n        i && console.info(\"[UIX:\" + u + \"] transmitting declaration\", a), c(u, a).then(function (o) {\n          if (!0 === o) {\n            var a = window.xprops,\n                d = a.onProps,\n                l = a.resize,\n                c = n(a, r);\n            i && console.info(\"[UIX:\" + u + \"] initial shared props\", c), d(function (e) {\n              var o = n(e, t);\n              i && console.info(\"[UIX:\" + u + \"] new shared props\", o), \"boolean\" == typeof e.isExpanded && l(e.isExpanded ? {\n                height: \"full\",\n                width: \"100%\"\n              } : {\n                height: \"auto\",\n                width: \"100%\"\n              }), p(s(o));\n            }), i && console.info(\"[UIX:\" + u + \"] initialized\"), p(s(c)), e({\n              status: \"ok\",\n              props: s(c)\n            });\n          } else i && console.info(\"[UIX:\" + u + \"] sdk renderer returned status:\", o), e({\n            status: \"validation\"\n          });\n        });\n      } else i && console.error(\"[UIX] no shared props from host found\"), d({\n        error: \"failed_communication\",\n        message: \"No communication established with host, please check your URL\"\n      });\n    });\n  }\n\n  var d = {\n    init: a\n  };\n  e.ConfigType = {\n    string: \"string\",\n    number: \"number\",\n    boolean: \"boolean\"\n  }, e.ExtensionType = {\n    formSidebar: \"formSiderbar\",\n    field: \"field\"\n  }, e.FieldExtensionFeature = {\n    FieldRenderer: \"FieldRenderer\",\n    ListRenderer: \"ListRenderer\",\n    TableRenderer: \"TableRenderer\"\n  }, e.FieldExtensionType = {\n    STRING: \"STRING\",\n    RICHTEXT: \"RICHTEXT\",\n    INT: \"INT\",\n    FLOAT: \"FLOAT\",\n    BOOLEAN: \"BOOLEAN\",\n    JSON: \"JSON\",\n    DATETIME: \"DATETIME\",\n    DATE: \"DATE\",\n    LOCATION: \"LOCATION\",\n    COLOR: \"COLOR\",\n    ENUMERATION: \"ENUMERATION\",\n    RELATION: \"RELATION\",\n    ASSET: \"ASSET\",\n    UNION: \"UNION\"\n  }, e.StageColorPalette = {\n    PINK: \"PINK\",\n    PURPLE: \"PURPLE\",\n    ORANGE: \"ORANGE\",\n    RED: \"RED\",\n    BROWN: \"BROWN\",\n    TEAL: \"TEAL\",\n    GREEN: \"GREEN\",\n    YELLOW: \"YELLOW\"\n  }, e.ToastPosition = {\n    \"top-right\": \"top-right\",\n    \"top-center\": \"top-center\",\n    \"top-left\": \"top-left\",\n    \"bottom-right\": \"bottom-right\",\n    \"bottom-center\": \"bottom-center\",\n    \"bottom-left\": \"bottom-left\"\n  }, e.ToastVariantColor = {\n    success: \"success\",\n    error: \"error\",\n    warning: \"warning\",\n    info: \"info\",\n    primary: \"primary\",\n    dark: \"dark\",\n    publish: \"publish\"\n  }, e.VisibilityType = {\n    READ_WRITE: \"READ_WRITE\",\n    READ_ONLY: \"READ_ONLY\",\n    HIDDEN: \"HIDDEN\"\n  }, e.default = d, e.init = a, e.reservedExtensionProps = i, Object.defineProperty(e, \"__esModule\", {\n    value: !0\n  });\n});","map":{"version":3,"sources":["../src/base.ts","../src/index.ts","../src/field.ts","../src/type-helpers/stage.ts","../src/type-helpers/toast.ts","../src/type-helpers/visibility.ts"],"names":["reservedExtensionProps","formSidebar","field","string","number","handleProps","props","transformedProps","Object","keys","forEach","key","includes","startsWith","replace","init","debug","declaration","onProps","uid","givenUid","Promise","resolve","reject","window","postMessage","error","message","URLSearchParams","location","search","get","console","info","zoid","create","tag","url","href","toString","autoResize","width","height","element","onConnected","type","xprops","then","status","onParentProps","_nevermind","resize","extensionProps","p","newExtensionProps","isExpanded","STRING","RICHTEXT","INT","FLOAT","BOOLEAN","JSON","DATETIME","DATE","LOCATION","COLOR","ENUMERATION","RELATION","ASSET","UNION","FieldRenderer","ListRenderer","TableRenderer","PINK","PURPLE","ORANGE","RED","BROWN","TEAL","GREEN","YELLOW","success","warning","primary","dark","publish","READ_WRITE","READ_ONLY","HIDDEN"],"mappings":"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","sourcesContent":["import type { ShowToast } from './type-helpers/toast';\nimport type { ExtensionDeclaration } from '.';\nimport type { FieldExtensionDeclaration } from './field';\n\n// see https://github.com/krakenjs/zoid/blob/master/src/component/props.js#L53\nexport const reservedExtensionProps = [\n  'timeout',\n  'window',\n  'close',\n  'focus',\n  'resize',\n  'uid',\n  'cspNonce',\n  'getParent',\n  'getParentDomain',\n  'hide',\n  'show',\n  'export',\n  'onDisplay',\n  'onRendered',\n  'onRender',\n  'onClose',\n  'onDestroy',\n  'onResize',\n  'onFocus',\n  'onError',\n  'onProps',\n];\n\nexport const ExtensionPermission = {\n  INPUT: 'INPUT',\n  FORM: 'FORM',\n  API: 'API',\n} as const;\n\nexport const ExtensionType = {\n  formSidebar: 'formSiderbar',\n  field: 'field',\n} as const;\n\nexport const ConfigType = {\n  string: 'string',\n  number: 'number',\n  boolean: 'boolean',\n} as const;\n\nexport interface IExtensionDeclaration {\n  name: string;\n  description?: string;\n  permissions?: (keyof typeof ExtensionPermission)[];\n  config?: Record<ConfigVariableName, ConfigVariableSettings>;\n}\n\ntype ConfigVariableName = string;\n\ntype ConfigVariableSettings = {\n  type: keyof typeof ConfigType;\n  displayName?: string;\n  description?: string;\n  required?: boolean;\n  defaultValue?: any;\n};\n\nexport type ConfigFields = Record<ConfigVariableName, ConfigVariableSettings>;\n\nexport type ConfigValue = Record<\n  string,\n  boolean | number | string | undefined | null\n>;\n\nexport interface ExtensionPropsBase<T extends ExtensionDeclaration> {\n  extension: (T extends FieldExtensionDeclaration\n    ? { tableConfig: ConfigValue; fieldConfig: ConfigValue }\n    : { sidebarConfig: ConfigValue }) & {\n    config: ConfigValue;\n    status: 'connected' | 'connecting' | 'error' | 'disconnected';\n  };\n\n  isExpanded: boolean;\n  expand: (expand: boolean | ((isExpanded: boolean) => boolean)) => unknown;\n  context: {\n    project: {\n      id: string;\n      name: string;\n      mgmtApi: string;\n      mgmtToken: string;\n    };\n    environment: {\n      id: string;\n      name: string;\n      endpoint: string;\n      authToken: string;\n    };\n  };\n\n  openDialog: <DialogReturn = any, DialogProps = Record<string, any>>(\n    src: string,\n    props?: {\n      disableOverlayClick?: boolean;\n      maxWidth?: string;\n      ariaLabel?: string;\n    } & DialogProps\n  ) => Promise<DialogReturn | null>;\n\n  showToast: ShowToast;\n}\n\nexport interface ExtensionDialogProps\n  extends ExtensionPropsBase<ExtensionDeclaration> {\n  onCloseDialog: (value: any) => void;\n}\n","import zoid from '@graphcms/zoid/lib/zoid.js';\n\nimport { ExtensionDialogProps, reservedExtensionProps } from './base';\nexport {\n  ExtensionDialogProps,\n  reservedExtensionProps,\n  ExtensionType,\n  ConfigType,\n} from './base';\nimport type { FieldExtensionDeclaration, FieldExtensionProps } from './field';\nimport type {\n  FormSidebarExtensionDeclaration,\n  FormSidebarExtensionProps,\n} from './formSidebar';\n\nexport type {\n  FormSidebarExtensionDeclaration,\n  FormSidebarExtensionProps,\n} from './formSidebar';\n\nexport type {\n  FormState,\n  FieldState,\n  FieldSubscription,\n  Subscriber,\n  FormSubscription,\n  Form,\n} from './type-helpers/form';\n\nexport { VisibilityType, VisibilityTypes } from './type-helpers/visibility';\nexport type {\n  SetFieldsVisibility,\n  VisibilityMap,\n} from './type-helpers/visibility';\n\nexport type { FieldExtensionDeclaration, FieldExtensionProps } from './field';\n\nexport { FieldExtensionFeature, FieldExtensionType } from './field';\nexport { StageColorPalette } from './type-helpers/stage';\nexport { ToastPosition, ToastVariantColor } from './type-helpers/toast';\n\nexport type ExtensionProps =\n  | FieldExtensionProps\n  | FormSidebarExtensionProps\n  | ExtensionDialogProps;\n\ntype Xprops = {\n  onProps: (props: Record<string, any>) => void;\n  onConnected: (\n    uid: string,\n    declaration: ExtensionDeclaration\n  ) => Promise<unknown>;\n  resize: (size: {\n    height: 'auto' | 'full' | number;\n    width: 'auto' | '100%' | number;\n  }) => unknown;\n} & ExtensionProps;\n\ndeclare global {\n  interface Window {\n    xprops: Xprops;\n  }\n}\n\nexport type ExtensionDeclaration =\n  | FieldExtensionDeclaration\n  | FormSidebarExtensionDeclaration;\n\nfunction handleProps(props: any) {\n  const transformedProps: any = {};\n  Object.keys(props).forEach((key: string) => {\n    // do not pass down zoid props to the extension\n    if (reservedExtensionProps.includes(key)) return;\n\n    // transform props that were prefixed with '_' to bypass zoid reverved porps\n    if (\n      key.startsWith('_') &&\n      reservedExtensionProps.includes(key.replace(/^_/g, ''))\n    ) {\n      transformedProps[key.replace(/^_/g, '')] = props[key];\n    } else {\n      transformedProps[key] = props[key];\n    }\n  });\n  return transformedProps;\n}\n\nexport type DeclarationRelativeProps<\n  T extends ExtensionDeclaration\n> = T extends FieldExtensionDeclaration\n  ? FieldExtensionProps\n  : T extends FormSidebarExtensionDeclaration\n  ? FormSidebarExtensionProps\n  : ExtensionProps;\n\nexport function init<T extends ExtensionDeclaration>({\n  debug,\n  declaration,\n  onProps = () => undefined,\n  uid: givenUid,\n}: {\n  declaration: T;\n  onProps: (props: DeclarationRelativeProps<T>) => unknown;\n  debug?: boolean;\n  uid?: string;\n}) {\n  return new Promise<\n    | { status: 'ok'; props: DeclarationRelativeProps<T> }\n    | { status: 'validation' }\n  >((resolve, reject) => {\n    if (\n      typeof window === 'undefined' ||\n      typeof window.postMessage === 'undefined'\n    ) {\n      return reject({\n        error: 'unsupported_env',\n        message:\n          'Unsupported environment: Not in a browser supporting PostMessage',\n      });\n    }\n\n    const uid =\n      givenUid ||\n      (typeof URLSearchParams !== 'undefined' &&\n        new URLSearchParams(window.location.search).get('extensionUid'));\n\n    if (!uid) {\n      if (debug)\n        console.error(`[UIX] no uid found in init params or extension URL`);\n      return reject({\n        error: 'missing_uid',\n        message: 'Missing UID: no UID found in init params or extension URL',\n      });\n    }\n    if (debug) console.info(`[UIX:${uid}] initializing with uid ${uid}`);\n\n    zoid.create({\n      tag: uid,\n      url: window.location.href.toString(),\n      autoResize: {\n        width: false,\n        height: true,\n        element: 'html',\n      },\n      props: {\n        onConnected: {\n          type: 'function',\n        },\n      },\n    });\n    if (typeof window.xprops !== 'undefined') {\n      const { onConnected, onProps: initialOnProps } = window.xprops;\n      if (debug) {\n        console.info(`[UIX:${uid}] transmitting declaration`, declaration);\n      }\n      onConnected(uid, declaration).then((status) => {\n        if (status === true) {\n          const {\n            onProps: onParentProps,\n            onConnected: _nevermind,\n            resize,\n            ...extensionProps\n          } = window.xprops;\n\n          if (debug)\n            console.info(`[UIX:${uid}] initial shared props`, extensionProps);\n          onParentProps((p: Xprops) => {\n            const {\n              onProps: onParentProps,\n              onConnected,\n              ...newExtensionProps\n            } = p;\n\n            if (debug)\n              console.info(`[UIX:${uid}] new shared props`, newExtensionProps);\n            if (typeof p.isExpanded === 'boolean') {\n              p.isExpanded\n                ? resize({ height: 'full', width: '100%' })\n                : resize({ height: 'auto', width: '100%' });\n            }\n            onProps(handleProps(newExtensionProps));\n          });\n\n          if (debug) console.info(`[UIX:${uid}] initialized`);\n          onProps(handleProps(extensionProps));\n          resolve({ status: 'ok', props: handleProps(extensionProps) });\n        } else {\n          if (debug)\n            console.info(`[UIX:${uid}] sdk renderer returned status:`, status);\n          resolve({ status: 'validation' });\n        }\n      });\n    } else {\n      if (debug) console.error(`[UIX] no shared props from host found`);\n      reject({\n        error: 'failed_communication',\n        message:\n          'No communication established with host, please check your URL',\n      });\n    }\n  });\n}\n\nexport default { init };\n","import type { Form } from './type-helpers/form';\nimport type {\n  IExtensionDeclaration,\n  ConfigFields,\n  ExtensionPropsBase,\n  ConfigValue,\n  ExtensionType,\n} from './base';\nimport type { SetFieldsVisibility } from './type-helpers/visibility';\nimport type { Model } from './type-helpers/model';\nimport type {\n  FocusEvent as ReactFocusEvent,\n  ChangeEvent as ReactChangeEvent,\n} from 'react';\n\nexport const FieldExtensionType = {\n  STRING: 'STRING',\n  RICHTEXT: 'RICHTEXT',\n  INT: 'INT',\n  FLOAT: 'FLOAT',\n  BOOLEAN: 'BOOLEAN',\n  JSON: 'JSON',\n  DATETIME: 'DATETIME',\n  DATE: 'DATE',\n  LOCATION: 'LOCATION',\n  COLOR: 'COLOR',\n  ENUMERATION: 'ENUMERATION',\n  RELATION: 'RELATION',\n  ASSET: 'ASSET',\n  UNION: 'UNION',\n} as const;\n\nexport const FieldExtensionFeature = {\n  FieldRenderer: 'FieldRenderer',\n  ListRenderer: 'ListRenderer',\n  TableRenderer: 'TableRenderer',\n} as const;\n\nexport interface Asset {\n  createdAt: string;\n  fileName: string;\n  handle: string;\n  height?: number;\n  id: string;\n  mimeType?: string;\n  size?: number;\n  updatedAt: string;\n  url: string;\n  width?: number;\n}\n\nexport interface FieldExtensionDeclaration extends IExtensionDeclaration {\n  extensionType: typeof ExtensionType.field;\n  fieldType: keyof typeof FieldExtensionType;\n  /**\n   * Extension capabilities\n   */\n  features: (keyof typeof FieldExtensionFeature)[];\n  fieldConfig?: ConfigFields;\n  listConfig?: ConfigFields;\n  tableConfig?: ConfigFields;\n}\n\nexport interface FieldExtensionProps\n  extends ExtensionPropsBase<FieldExtensionDeclaration> {\n  // name of the field in the form (may differ from the field apiId, ie. for localized fields)\n  name: string;\n\n  // current locale on localized field\n  locale?: string;\n\n  // current entry id, null for new entries;\n  entryId: string | null;\n\n  isTableCell: boolean;\n\n  isReadOnly?: boolean;\n\n  value: any;\n\n  onBlur: <T extends FocusEvent | ReactFocusEvent>(event?: T) => Promise<void>;\n\n  onChange: <T extends InputEvent | ReactChangeEvent>(\n    event: T | any\n  ) => Promise<void>;\n\n  onFocus: <T extends FocusEvent | ReactFocusEvent>(event?: T) => Promise<void>;\n\n  // @see https://final-form.org/docs/react-final-form/types/FieldRenderProps\n  meta: {\n    active: boolean;\n    error: any;\n    touched: boolean;\n  };\n\n  /**\n   * @deprecated use `expand` instead\n   */\n  expandField?: (expand: boolean) => unknown;\n\n  openAssetPicker: () => Promise<null | (Asset & Record<string, unknown>)>;\n\n  form: Form;\n  field: {\n    id: string;\n    apiId: string;\n    description: string | null;\n    displayName: string;\n    isList: boolean;\n    isLocalized?: boolean;\n    isRequired?: boolean;\n    isUnique?: boolean;\n    type: keyof typeof FieldExtensionType;\n  };\n  model: Model;\n  /**\n   * @deprecated Please use {@link Form.setFieldsVisibility}\n   */\n  setFieldsVisibility: SetFieldsVisibility;\n  /**\n   * @deprecated Please use {@link ExtensionPropsBase.extension extension.fieldConfig}\n   */\n  fieldConfig?: ConfigValue;\n  /**\n   * @deprecated Please use {@link ExtensionPropsBase.extension extension.tableConfig}\n   */\n  tableConfig?: ConfigValue;\n}\n","export const StageColorPalette = {\n  PINK: 'PINK',\n  PURPLE: 'PURPLE',\n  ORANGE: 'ORANGE',\n  RED: 'RED',\n  BROWN: 'BROWN',\n  TEAL: 'TEAL',\n  GREEN: 'GREEN',\n  YELLOW: 'YELLOW',\n} as const;\n\nexport type Stage = {\n  id: string;\n  createdAt: string;\n  updatedAt: string;\n  apiId: string;\n  color: string;\n  colorPaletteId: keyof typeof StageColorPalette;\n  backgroundColor: string;\n  displayName: string;\n  description?: string;\n  isSystem: boolean;\n  position: number;\n};\n","type Id = string;\n\nexport const ToastVariantColor = {\n  success: 'success',\n  error: 'error',\n  warning: 'warning',\n  info: 'info',\n  primary: 'primary',\n  dark: 'dark',\n  publish: 'publish',\n} as const;\n\nexport const ToastPosition = {\n  'top-right': 'top-right',\n  'top-center': 'top-center',\n  'top-left': 'top-left',\n  'bottom-right': 'bottom-right',\n  'bottom-center': 'bottom-center',\n  'bottom-left': 'bottom-left',\n} as const;\n\ntype ToastOptions = {\n  title: string;\n  description?: string;\n  variantColor: keyof typeof ToastVariantColor;\n  id?: Id;\n  isClosable?: boolean;\n  position?: keyof typeof ToastPosition;\n  duration?: number;\n};\n\nexport type ShowToast = (options: ToastOptions) => Promise<Id>;\n","export const VisibilityType = {\n  READ_WRITE: 'READ_WRITE',\n  READ_ONLY: 'READ_ONLY',\n  HIDDEN: 'HIDDEN',\n} as const;\n\nexport type VisibilityMap = {\n  [fieldApiId: string]: keyof typeof VisibilityType;\n};\n\nexport type SetFieldsVisibility = (\n  arg: VisibilityMap | ((currentVisibilityMap: VisibilityMap) => VisibilityMap)\n) => void;\n\n/**\n *@deprecated\n */\nexport type VisibilityTypes = keyof typeof VisibilityType;\n"]},"metadata":{},"sourceType":"script"}